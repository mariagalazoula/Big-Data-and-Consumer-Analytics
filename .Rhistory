install.packages("foreign",dep = T)
install.packages(GIS.tools, dep = T)
install.packages("GISTOOLS",dep = t)
>install.packages("GISTools",dep = T)
>install.packages("GISTools",dep = T)
install.packages("GISTools",dep = T)
library.foreign
library(foreign)
my.data<- read.spss("UniWD-ED91data-Vote97.sav", to.data.frame = T)
# test for package existance and install
if (!is.element("tidyverse", installed.packages()))
install.packages("tidyverse", dep = T)
library(tidyverse)
setwd("~/GitHub/Big-Data-and-Consumer-Analytics")
mpg
install.packages("ggplot2", dep = T)
library(ggplot2)
mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg)
mpg
#displ = a car’s engine size, in litres.
#hwy = a car’s fuel efficiency on the highway, in miles per gallon (mpg)
View(mpg)
?mpg
ggplot(data = mpg) +
geom_point(mapping = aes(x = cyl, y = hwy))
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
ggplot(data = mpg, aes(hwy, cyl)) + geom_point()`
ggplot(data = mpg) + geom_point(mapping =  aes(hwy, cyl))`
ggplot(data = mpg) + geom_point(mapping =  aes(hwy, cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
#we can check for the outliers by adding another value
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = class))
#or map it on alpha, which is basically the aesthetics
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = class))
#Right, or map it on different symbols
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = class))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy), colour = "blue")
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = "blue"))
?geom_point()
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = cty))
#we can also use different sizes for each class
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, size = cty))
# Left, or map it on alpha, which is basically the transparency
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, alpha = cty))
#Right, or map it on different symbols
# Right
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, shape = cty))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = displ < 5))
#when we display the displ <5, all the observations that have displ <5 are TRUE, the others are false
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = displ =< 5))
#when we display the displ <5, all the observations that have displ <5 are TRUE, the others are false
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = displ <= 5))
#when we display the displ <5, all the observations that have displ <5 are TRUE, the others are false
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = displ < 5))
+ geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) + geom_point(mapping = aes(x = displ, y = hwy))
##FACETS
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
#facet on a continuous variable
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty, nrow = 2)
##combination of two variables
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = drv, y = cyl))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
#
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv)
#
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~)
#
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(drv ~ .)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_grid(. ~ cyl)
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ class, nrow = 2)
?facet_wrap
#facet on a continuous variable~a lot of plots
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty, nrow = 3)
#facet on a continuous variable~a lot of plots
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty, nrow = 2)
#facet on a continuous variable~a lot of plots
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
facet_wrap(~ cty, nrow = 5)
?facet_grid
# left
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
# left
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
#each of the values for the variable drv has a different linetype
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linewidth = drv))
?aes
?aes()
#each of the values for the variable drv has a different linetype
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, lwd = drv))
#each of the values for the variable drv has a different linetype
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, lwd = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, lwd = drv), colour = drv)
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, lwd = drv, colour = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, colour = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, linetype = drv, colour = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = drv))+
geom_smooth(mapping = aes(x = displ, y = hwy, lwd = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = drv))+
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = drv))+
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv, colour = drv))
#Make a scatterplot of hwy vs cyl
ggplot(data = mpg) +
geom_point(mapping = aes(x = cyl, y = hwy))
# make a scatterplot of class vs drv
ggplot(data = mpg) +
geom_point(mapping = aes(x = class, y = drv))
#we can check for the outliers by adding another value by adding an aesthetic
#An aesthetic is a visual property of the objects in your plot.
#Aesthetics include things like the size, the shape, or the colour of your points
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy, colour = class))
#we can check for the outliers by adding another value by adding an aesthetic
#An aesthetic is a visual property of the objects in your plot.
#Aesthetics include things like the size, the shape, or the colour of your points
ggplot(data = mpg) +
geom_jitter(mapping = aes(x = displ, y = hwy, colour = class))
# plots the points exactly
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_ribbon(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_path(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_polugon(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_polygon(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_tile(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, colour = drv),
show.legend = TRUE
)
ggplot(data = mpg) +
geom_smooth(
mapping = aes(x = displ, y = hwy, colour = drv),
show.legend = FALSE
)
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
# plots a line that fits the data
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy))
#each of the values for the variable drv has a different linetype
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, linetype = drv))
#each of the values for the variable drv has a different linewidth
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, lwd = drv))
ggplot(data = mpg) +
geom_smooth(mapping = aes(x = displ, y = hwy, group = drv))
ggplot(data = mpg) +
geom_point(mapping = aes(x = displ, y = hwy)) +
geom_smooth(mapping = aes(x = displ, y = hwy))
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point() +
geom_smooth()
#change properties for one plot only
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = class)) +
geom_smooth()
#different data for each layer
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
#different data for each layer
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
install.packages("dplyr", dep = T)
install.packages("dplyr", dep = T)
library(dplyr)
install.packages("dplyr", dep = T)
install.packages("dplyr", dep = T)
install.packages("dplyr", dep = T)
library(dplyr)
library(tidyverse)
library(ggplot2)
mpg
#different data for each layer
ggplot(data = mpg, mapping = aes(x = displ, y = hwy)) +
geom_point(mapping = aes(colour = class)) +
geom_smooth(data = filter(mpg, class == "subcompact"), se = FALSE)
