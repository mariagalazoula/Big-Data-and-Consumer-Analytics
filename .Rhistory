install.packages("foreign",dep = T)
install.packages(GIS.tools, dep = T)
install.packages("GISTOOLS",dep = t)
>install.packages("GISTools",dep = T)
>install.packages("GISTools",dep = T)
install.packages("GISTools",dep = T)
library.foreign
library(foreign)
my.data<- read.spss("UniWD-ED91data-Vote97.sav", to.data.frame = T)
# test for package existance and install
if (!is.element("tidyverse", installed.packages()))
install.packages("tidyverse", dep = T)
library(tidyverse)
library(tidyverse)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds %>%
count(cut)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
diamonds %>%
count(cut_width(carat, 0.5))
smaller <- diamonds %>%
filter(carat < 3)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.1)
ggplot(data = smaller, mapping = aes(x = carat, colour = cut)) +
geom_freqpoly(binwidth = 0.1)
diamonds %>%
count(cut)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
ggplot(data = diamonds) +
geom_bar(mapping = aes(x = cut))
diamonds %>%
count(cut)
ggplot(data = diamonds) +
geom_histogram(mapping = aes(x = carat), binwidth = 0.5)
ggplot(data = smaller, mapping = aes(x = carat)) +
geom_histogram(binwidth = 0.01)
unusual <- diamonds %>%
select(price, x, y, z) %>%
arrange(y)
unusual
View(usual)
View(unusual)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = x), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 0.5)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 10)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 100)
ggplot(diamonds) +
geom_histogram(mapping = aes(x = price), binwidth = 1000)
small<-diamonds %>%
filter(carat = 0.99)
small<-diamonds %>%
filter(carat == 0.99)
small<-diamonds %>%
filter(carat == 1)
#distribution of y
#distribution of x
ggplot(diamonds) +
geom_histogram(mapping = aes(x = y), binwidth = 0.5)
#distribution of z
ggplot(diamonds) +
geom_histogram(mapping = aes(x = z), binwidth = 0.5)
#distribution of x
ggplot(diamonds) +
geom_histogram(mapping = aes(x = x), binwidth = 0.5)
small<-diamonds %>%
filter(carat == 1)
diamonds %>%
mutate(id = row_number()) %>%
select(x, y, z, id) %>%
gather(variable, value, -id) %>%
ggplot(aes(x = value)) +
geom_density() +
geom_rug() +
facet_grid(variable ~ .)
small<-diamonds %>%
filter(carat >= 0.99, carat == 1) %>%
count(carat)
small
diamonds %>%
filter(carat >= 0.99, carat == 1) %>%
count(carat)
small
diamonds %>%
filter(carat >= 0.99, carat <= 1) %>%
count(carat)
small
diamonds %>%
filter(carat >= 0.99, carat <= 1) %>%
count(carat)
nycflights13::flights %>%
mutate(
cancelled = is.na(dep_time),
sched_hour = sched_dep_time %/% 100,
sched_min = sched_dep_time %% 100,
sched_dep_time = sched_hour + sched_min / 60
) %>%
ggplot() +
geom_boxplot(mapping = aes(y = sched_dep_time, x = cancelled))
View(smaller)
ggplot(diamonds, aes(x = carat, y = price)) +
geom_point()
# test for package existance and install
if (!is.element("tidyverse", installed.packages()))
install.packages("tidyverse", dep = T)
if (!is.element("nycflights13", installed.packages()))
install.packages("nycflights13", dep = T)
# load into the R session
library(tidyverse)
library(nycflights13)
install.packages("OpenStreetMap", dep = T)
cl <- as_tibble(read.csv("dunnhumby/dh_causal_lookup.csv"))
pl <- as_tibble(read.csv("dunnhumby/dh_product_lookup.csv"))
sl <- as_tibble(read.csv("dunnhumby/dh_store_lookup.csv"))
tr <- as_tibble(read.csv("dunnhumby/dh_transactions.csv"))
setwd("M:/GitHub/Big-Data-and-Consumer-Analytics")
cl <- as_tibble(read.csv("dunnhumby/dh_causal_lookup.csv"))
pl <- as_tibble(read.csv("dunnhumby/dh_product_lookup.csv"))
sl <- as_tibble(read.csv("dunnhumby/dh_store_lookup.csv"))
tr <- as_tibble(read.csv("dunnhumby/dh_transactions.csv"))
# test for package existance and install
if (!is.element("tidyverse", installed.packages()))
install.packages("tidyverse", dep = T)
if (!is.element("nycflights13", installed.packages()))
install.packages("nycflights13", dep = T)
# load into the R session
library(tidyverse)
library(nycflights13)
install.packages("OpenStreetMap", dep = T)
#load the data as tibble
library(tidyverse)
cl <- as_tibble(read.csv("dunnhumby/dh_causal_lookup.csv"))
pl <- as_tibble(read.csv("dunnhumby/dh_product_lookup.csv"))
sl <- as_tibble(read.csv("dunnhumby/dh_store_lookup.csv"))
tr <- as_tibble(read.csv("dunnhumby/dh_transactions.csv"))
#find the households that bought with a coupon
tr%>%
left_join(pl)
#find the households that bought with a coupon
tr%>%
left_join(pl)%>%
filter(coupon == 1)%>%
filter(commodity == "pasta")-> r1
View(r1)
View(r1)
#find number of households that bought a product with a coupon
n.hh<- unique(r1$household)
#examine each household particularly
tr%>%
left_join(pl)%>% #join the data
filter(commodity == "pasta")->r2 #filter for the commodity that we have and save
n.hhcom<- unique(r2$household)
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
common_hh <- instersect(n.hh, n.hhcom)
common_hh <- intersect(n.hh, n.hhcom)
View(common_hh)
remove(common_hh)
r2%>%
filter(household == n.hh)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
view(n.hh)
r2%>%
filter(household == n.hh[row,])%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
for (row in 1:nrow(n.hh)){
r2%>%
filter(household == n.hh[row,])%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
for (row in 1:nrow(n.hh)){
r2%>%
filter(household == n.hh[row,])%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
for (x in 1:nrow(n.hh)){
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
for (x in row(n.hh)){
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
for (x in row(as.table(n.hh)){
for (x in row(as.table(n.hh))){
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
for (x in row(r1$household)){
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
r2%>%
filter(household == r1$household)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
n.hhcom<- as.data.frame(unique(r2$household))
#find number of households that bought a product with a coupon
n.hh<- as.data.frame(unique(r1$household))
r2%>%
filter(household == n.hh$household)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
for (x in row(n.hh)){
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
if(tmp[1] == 1 & length(tmp) > 1), return(x)
View(r2)
r2%>%
arrange(day, -coupon)-> r3
View(r3)
r2%>%
arrange(day, -coupon)%>%
dplyr::select(household, upc, commodity, day, coupon)-> r3
View(r3)
count(r3$coupon)
count(r3,coupon)
View(n.hh)
for (x in n.hh$`unique(r1$household)`){
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
dplyr::select(coupon)%>%
unlist->tmp
}
View(tmp)
r2%>%
filter(household == x)%>%
arrange(day, -coupon)->tmp
View(tmp)
r2%>%
filter(household == r1$household)%>%
arrange(day, -coupon)%>%
select(coupon)%>%
unlist->tmp
View(tmp)
r2%>%
filter(household == r1$household)%>%
arrange(day, -coupon)%>%
unlist->tmp
r2%>%
filter(household == x)%>%
arrange(day, -coupon)->tmp
r2%>%
filter(household == x)%>%
arrange(day, -coupon)%>%
select(coupon)%>%
unlist->tmp
apply(r1, 1, extract)
apply(as.numeric(r1$household), 1, extract)
#find number of households that bought a product with a coupon
n.hh<- unique(r1$household)
apply(n.hh, 1, extract)
